{"version":3,"sources":["Charts.js","Clock.js","App.js","index.js"],"names":["colors","Charts","props","streamData","data","style","display","theme","VictoryTheme","material","width","height","parent","backgroundColor","axis","stroke","tickLabels","fill","dependentAxis","size","d","x","domainPadding","padding","position","top","map","i","key","colorScale","SPEED","Math","PI","FRAMES","Clock","faceRef","useRef","arcGroupRef","clockHandRef","paths","Array","push","className","frame","hitCounter","rotation","t0","Date","now","arcs","animate","lx","ly","tx","ty","td","length","forEach","r","cos","sin","bigArc","path","hue","min","colour","arcEl","current","children","setAttribute","shift","requestAnimationFrame","useEffect","addEventListener","handleClick","removeEventListener","cancelAnimationFrame","console","log","e","stopPropagation","onClick","cx","cy","ref","cachedData","Map","container","document","getElementById","ReactDOM","unstable_createRoot","render","_ignoreClick","useState","value","strategy","showDemo","showClock","state","setState","KeyDownHandler","toLowerCase","preventDefault","window","handleChartClick","shiftKey","Scheduler","unstable_next","flushSync","debouncedHandleChange","_","debounce","renderOption","label","currentStrategy","type","checked","onChange","input","has","get","multiplier","complexity","parseInt","location","search","substring","range","t","j","y","random","set","getStreamData","placeholder","defaultValue","target","unstable_scheduleCallback"],"mappings":"2UAYMA,EAAS,CAAC,UAAW,UAAW,UAAW,UAAW,WAE7C,SAASC,EAAOC,GAE3B,IAAMC,EAAaD,EAAME,KACzB,OACI,6BACI,yBAAKC,MAAO,CAAEC,QAAS,SACnB,kBAAC,IAAD,CACIC,MAAOC,IAAaC,SACpBC,MAAO,IACPC,OAAQ,IACRN,MAAO,CACHO,OAAQ,CACJC,gBAAiB,UAGzB,kBAAC,IAAD,CACIR,MAAO,CACHS,KAAM,CAAEC,OAAQ,SAChBC,WAAY,CAAEC,KAAM,YAG5B,kBAAC,IAAD,CACIZ,MAAO,CACHS,KAAM,CAAEC,OAAQ,SAChBC,WAAY,CAAEC,KAAM,UAExBC,eAAa,IAEjB,kBAAC,IAAD,CACId,KAAMD,EAAW,GACjBgB,KAAM,EACNd,MAAO,CACHD,KAAM,CACFa,KAAM,SAAAG,GAAC,OAAIpB,EAAOoB,EAAEC,EAAI,SAKxC,kBAAC,IAAD,CACId,MAAOC,IAAaC,SACpBC,MAAO,IACPC,OAAQ,IACRN,MAAO,CACHO,OAAQ,CACJC,gBAAiB,SAGzBS,cAAe,CAAC,GAAI,KACpB,kBAAC,IAAD,CACIjB,MAAO,CACHS,KAAM,CAAEC,OAAQ,SAChBC,WAAY,CAAEC,KAAM,YAG5B,kBAAC,IAAD,CACIZ,MAAO,CACHS,KAAM,CAAEC,OAAQ,SAChBC,WAAY,CAAEC,KAAM,UAExBC,eAAa,IAEjB,kBAAC,IAAD,CACId,KAAMD,EAAW,GACjBE,MAAO,CACHD,KAAM,CACFa,KAAM,SAAAG,GAAC,OAAIpB,EAAOoB,EAAEC,EAAI,IACxBN,OAAQ,OACRQ,QAAS,QAM7B,yBACIlB,MAAO,CACHC,QAAS,OACTkB,SAAU,WACVC,IAAK,UAET,kBAAC,IAAD,CACIlB,MAAOC,IAAaC,SACpBC,MAAO,IACPC,OAAQ,IACRN,MAAO,CACHO,OAAQ,CACJC,gBAAiB,UAGzB,kBAAC,IAAD,CACIR,MAAO,CACHS,KAAM,CAAEC,OAAQ,SAChBC,WAAY,CAAEC,KAAM,YAG5B,kBAAC,IAAD,CACIZ,MAAO,CACHS,KAAM,CAAEC,OAAQ,SAChBC,WAAY,CAAEC,KAAM,UAExBC,eAAa,IAEjB,kBAAC,IAAD,KACKf,EAAWuB,IAAI,SAACtB,EAAMuB,GAAP,OACZ,kBAAC,IAAD,CAAaC,IAAKD,EAAGvB,KAAMA,EAAMyB,WAAY7B,UCnHzE,IAAM8B,EAAQ,KAAQC,KAAKC,GACrBC,EAAS,GAEA,SAASC,IAOpB,IAP6B,IAAD,OAEtBC,EAAUC,mBACVC,EAAcD,mBACdE,EAAeF,mBAEfG,EAAQ,IAAIC,MAAMP,GACfN,EAAI,EAAGA,EAAIM,EAAQN,IACxBY,EAAME,KAAK,0BAAMC,UAAU,UAAUd,IAAKD,KAG9C,IAAIgB,EAAQ,KAAMC,EAAa,EAAGC,EAAW,EAAGC,EAAKC,KAAKC,MAAOC,EAAO,GAElEC,EAAU,SAAVA,IAEF,IAOIC,EAAIC,EAAIC,EAAIC,EAPVN,EAAMD,KAAKC,MACXO,EAAKP,EAAMF,EACjBD,GAAYA,EAAWf,EAAQyB,IAAO,EAAIxB,KAAKC,IAC/Cc,EAAKE,EAELC,EAAKR,KAAK,CAAEI,SAAUA,EAAUU,OAG5BN,EAAKO,OAASvB,IACdgB,EAAKQ,QAAQ,WAAmB9B,GAAO,IAAvBkB,EAAsB,EAAtBA,SAAUU,EAAY,EAAZA,GACtBJ,EAAKE,EACLD,EAAKE,EACL,IAAMI,EAAI,IACVL,EAAK,IAAMK,EAAI3B,KAAK4B,IAAId,GACxBS,EAAK,IAAMI,EAAI3B,KAAK6B,IAAIf,GACxB,IAAMgB,EAAS/B,EAAQyB,EAAKxB,KAAKC,GAAK,IAAM,IACtC8B,EAAI,WAAOT,EAAP,YAAaC,EAAb,YAAmBI,EAAnB,YAAwBA,EAAxB,cAA+BG,EAA/B,cAA2CV,EAA3C,YAAiDC,EAAjD,YACJW,EAAM,IAAMhC,KAAKiC,IAAI,IAAKT,EAAK,GAC/BU,EAAM,cAAUF,EAAV,mBAAwB,GAAKpC,GAAK,GAAKM,GAAvC,MACZ,GAAU,IAANN,EAAS,CACT,IAAMuC,EAAQ7B,EAAY8B,QAAQC,SAASzC,EAAI,GAC/CuC,EAAMG,aAAa,IAAKP,GACxBI,EAAMG,aAAa,OAAQJ,MAGnC3B,EAAa6B,QAAQE,aAAa,IAAlC,mBAAmDhB,EAAnD,YAAyDC,IACzDL,EAAKqB,SAGL1B,EAAa,GACbT,EAAQgC,QAAQE,aACZ,OADJ,sBAEmB,EAAKzB,WAFxB,aAIAA,GAAc,IAEdA,EAAa,EACbT,EAAQgC,QAAQE,aAAa,OAAQ,0BAGzC1B,EAAQ4B,sBAAsBrB,IAGlCsB,oBAAU,WAMN,OALA7B,EAAQ4B,sBAAsBrB,GAC1Bf,EAAQgC,SACRhC,EAAQgC,QAAQM,iBAAiB,QAASC,GAGvC,WACHvC,EAAQgC,QAAQQ,oBAAoB,QAASD,GACzC/B,GACAiC,qBAAqBjC,KAG9B,IAEH6B,oBAAU,WACNK,QAAQC,IAAI,uBAAwB3C,EAAQgC,WAGhD,IAAMO,EAAc,SAAAK,GAChBA,EAAEC,kBACFpC,EAAa,IAGjB,OACI,yBAAKF,UAAU,aACX,yBAAK/B,OAAO,MAAMD,MAAM,OACpB,4BACIgC,UAAU,YACVuC,QAASP,EACTQ,GAAI,IACJC,GAAI,IACJzB,EAAG,IACH0B,IAAKjD,IAET,uBAAGiD,IAAK/C,GAAcE,GACtB,0BAAMG,UAAU,YAAY0C,IAAK9C,M,0jBC1FjD,IAAI+C,EAAa,IAAIC,ICJrB,IAAMC,EAAYC,SAASC,eAAe,QAC7BC,IAASC,oBAAoBJ,GACrCK,OAAO,kBAAC,aAAD,KAAY,kBDIT,WAAgB,IASvBC,EATsB,EAEAC,mBAAS,CAC/BC,MAAO,GACPC,SAAU,OACVC,UAAU,EACVC,WAAW,IANW,mBAEnBC,EAFmB,KAEZC,EAFY,KA6B1B5B,oBAAU,WACN,IAAM6B,EAAiB,SAAAtB,GACS,MAAxBA,EAAEnD,IAAI0E,gBACNvB,EAAEwB,iBACFH,EAAS,SAAAD,GAAK,MAAK,CACfD,WAAYC,EAAMD,eAM9B,OADAM,OAAO/B,iBAAiB,UAAW4B,GAC5B,WACHG,OAAO7B,oBAAoB,UAAW0B,KAE3C,IAEH,IAAMI,EAAmB,SAAA1B,GACjBoB,EAAMF,SACFlB,EAAE2B,UACFN,EAAS,EAAD,GAAMD,EAAN,CAAaF,UAAU,KAIhB,UAAnBE,EAAMH,SASNH,IAGJA,GAAe,EAEfc,IAAUC,cAAc,WACpBR,EAAS,CAAEH,UAAU,OAdrBY,oBAAU,WACNT,EAAS,SAAAD,GAAK,MAAK,CACfF,UAAWE,EAAMF,eAgB3Ba,EAAwBC,IAAEC,SAAS,SAAAjB,GAEd,cAAnBI,EAAMH,UACNa,oBAAU,WACNT,EAAS,EAAD,GAAMD,EAAN,CAAaJ,MAAOA,QAGrC,KAEGkB,EAAe,SAACjB,EAAUkB,GAE5B,IAAMC,EAAkBhB,EAAMH,SAE9B,OACI,2BAAOtD,UAAWsD,IAAamB,EAAkB,WAAa,MAC1D,2BACIC,KAAK,QACLC,QAASrB,IAAamB,EACtBG,SAAU,kBAAMlB,EAAS,EAAD,GAAMD,EAAN,CAAaH,iBAExCkB,IA0BP9G,EA1GgB,SAAAmH,GAElB,GAAIlC,EAAWmC,IAAID,GACf,OAAOlC,EAAWoC,IAAIF,GAG1B,IAAMG,EAA8B,IAAjBH,EAAM/D,OAAe+D,EAAM/D,OAAS,EACjDmE,EAAcC,SAASpB,OAAOqB,SAASC,OAAOC,UAAU,GAAI,IAAM,IAAO,IAAM,GAE/E3H,EAAO2G,IAAEiB,MAAM,GAAGtG,IAAI,SAAAuG,GAAC,OAAIlB,IAAEiB,MAAML,EAAaD,GAAYhG,IAAI,SAACwG,EAAGvG,GAClE,MAAO,CAACN,EAAG6G,EAAGC,GAAIF,EAAI,GAAKlB,IAAEqB,OAAO,EAAG,UAK/C,OADA/C,EAAWgD,IAAId,EAAOnH,GACfA,EA2FEkI,CAAcnC,EAAMJ,OAEjC,OACI,yBAAKrD,UAAU,aACX,yBAAKA,UAAU,aACVuE,EAAa,OAAQ,eACrBA,EAAa,YAAa,aAC1BA,EAAa,QAAS,eAE3B,2BACIvE,UAAW,SAAWyD,EAAMH,SAC5BuC,YAAY,oDACZC,aAAcrC,EAAMoB,MACpBD,SAlCS,SAAAvC,GAEjB,IAAMgB,EAAQhB,EAAE0D,OAAO1C,MAEvB,OAAQI,EAAMH,UACV,IAAK,OACDI,EAAS,EAAD,GAAMD,EAAN,CAAaJ,WACrB,MACJ,IAAK,YACDe,EAAsBf,GACtB,MACJ,IAAK,QACD2C,oCAA0B,WACtBtC,EAAS,EAAD,GAAMD,EAAN,CAAaJ,iBAuB7B,yBAAKrD,UAAU,OAAOuC,QAASwB,GAC1BN,EAAMF,UACH,kBAAChG,EAAD,CAAQG,KAAMA,EAAM6E,QAASwB,IAEjC,yBAAKpG,MAAO,CAAEC,QAAS6F,EAAMD,UAAY,QAAU,SAC/C,kBAAChE,EAAD,UC7II,U","file":"static/js/main.378b293f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport {\r\n    VictoryArea,\r\n    VictoryAxis,\r\n    VictoryChart,\r\n    VictoryBar,\r\n    VictoryTheme,\r\n    VictoryScatter,\r\n    VictoryStack\r\n} from 'victory';\r\n\r\nconst colors = ['#fff489', '#fa57c1', '#b166cc', '#7572ff', '#69a6f9'];\r\n\r\nexport default function Charts(props) {\r\n\r\n    const streamData = props.data;\r\n    return (\r\n        <div>\r\n            <div style={{ display: 'flex' }}>\r\n                <VictoryChart\r\n                    theme={VictoryTheme.material}\r\n                    width={400}\r\n                    height={400}\r\n                    style={{\r\n                        parent: {\r\n                            backgroundColor: '#222',\r\n                        },\r\n                    }}>\r\n                    <VictoryAxis\r\n                        style={{\r\n                            axis: { stroke: 'white' },\r\n                            tickLabels: { fill: 'white' },\r\n                        }}\r\n                    />\r\n                    <VictoryAxis\r\n                        style={{\r\n                            axis: { stroke: 'white' },\r\n                            tickLabels: { fill: 'white' },\r\n                        }}\r\n                        dependentAxis\r\n                    />\r\n                    <VictoryScatter\r\n                        data={streamData[0]}\r\n                        size={6}\r\n                        style={{\r\n                            data: {\r\n                                fill: d => colors[d.x % 5],\r\n                            },\r\n                        }}\r\n                    />\r\n                </VictoryChart>\r\n                <VictoryChart\r\n                    theme={VictoryTheme.material}\r\n                    width={400}\r\n                    height={400}\r\n                    style={{\r\n                        parent: {\r\n                            backgroundColor: '#222',\r\n                        },\r\n                    }}\r\n                    domainPadding={[20, 20]}>\r\n                    <VictoryAxis\r\n                        style={{\r\n                            axis: { stroke: 'white' },\r\n                            tickLabels: { fill: 'white' },\r\n                        }}\r\n                    />\r\n                    <VictoryAxis\r\n                        style={{\r\n                            axis: { stroke: 'white' },\r\n                            tickLabels: { fill: 'white' },\r\n                        }}\r\n                        dependentAxis\r\n                    />\r\n                    <VictoryBar\r\n                        data={streamData[0]}\r\n                        style={{\r\n                            data: {\r\n                                fill: d => colors[d.x % 5],\r\n                                stroke: 'none',\r\n                                padding: 5,\r\n                            },\r\n                        }}\r\n                    />\r\n                </VictoryChart>\r\n            </div>\r\n            <div\r\n                style={{\r\n                    display: 'flex',\r\n                    position: 'relative',\r\n                    top: '-50px',\r\n                }}>\r\n                <VictoryChart\r\n                    theme={VictoryTheme.material}\r\n                    width={800}\r\n                    height={350}\r\n                    style={{\r\n                        parent: {\r\n                            backgroundColor: '#222',\r\n                        },\r\n                    }}>\r\n                    <VictoryAxis\r\n                        style={{\r\n                            axis: { stroke: 'white' },\r\n                            tickLabels: { fill: 'white' },\r\n                        }}\r\n                    />\r\n                    <VictoryAxis\r\n                        style={{\r\n                            axis: { stroke: 'white' },\r\n                            tickLabels: { fill: 'white' },\r\n                        }}\r\n                        dependentAxis\r\n                    />\r\n                    <VictoryStack>\r\n                        {streamData.map((data, i) => (\r\n                            <VictoryArea key={i} data={data} colorScale={colors} />\r\n                        ))}\r\n                    </VictoryStack>\r\n                </VictoryChart>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { useRef, useEffect } from 'react';\r\n\r\nconst SPEED = 0.003 / Math.PI;\r\nconst FRAMES = 10;\r\n\r\nexport default function Clock() {\r\n\r\n    const faceRef = useRef();\r\n    const arcGroupRef = useRef();\r\n    const clockHandRef = useRef();\r\n\r\n    const paths = new Array(FRAMES);\r\n    for (let i = 0; i < FRAMES; i++) {\r\n        paths.push(<path className=\"arcHand\" key={i} />);\r\n    }\r\n\r\n    let frame = null, hitCounter = 0, rotation = 0, t0 = Date.now(), arcs = [];\r\n\r\n    const animate = () => {\r\n\r\n        const now = Date.now();\r\n        const td = now - t0;\r\n        rotation = (rotation + SPEED * td) % (2 * Math.PI);\r\n        t0 = now;\r\n\r\n        arcs.push({ rotation: rotation, td });\r\n\r\n        let lx, ly, tx, ty;\r\n        if (arcs.length > FRAMES) {\r\n            arcs.forEach(({ rotation, td }, i) => {\r\n                lx = tx;\r\n                ly = ty;\r\n                const r = 145;\r\n                tx = 155 + r * Math.cos(rotation);\r\n                ty = 155 + r * Math.sin(rotation);\r\n                const bigArc = SPEED * td < Math.PI ? '0' : '1';\r\n                const path = `M${tx} ${ty}A${r} ${r} 0 ${bigArc} 0 ${lx} ${ly}L155 155`;\r\n                const hue = 120 - Math.min(120, td / 4);\r\n                const colour = `hsl(${hue}, 100%, ${60 - i * (30 / FRAMES)}%)`;\r\n                if (i !== 0) {\r\n                    const arcEl = arcGroupRef.current.children[i - 1];\r\n                    arcEl.setAttribute('d', path);\r\n                    arcEl.setAttribute('fill', colour);\r\n                }\r\n            });\r\n            clockHandRef.current.setAttribute('d', `M155 155L${tx} ${ty}`);\r\n            arcs.shift();\r\n        }\r\n\r\n        if (hitCounter > 0) {\r\n            faceRef.current.setAttribute(\r\n                'fill',\r\n                `hsla(0, 0%, ${this.hitCounter}%, 0.95)`\r\n            );\r\n            hitCounter -= 1;\r\n        } else {\r\n            hitCounter = 0;\r\n            faceRef.current.setAttribute('fill', 'hsla(0, 0%, 5%, 0.95)');\r\n        }\r\n\r\n        frame = requestAnimationFrame(animate);\r\n    };\r\n\r\n    useEffect(() => {\r\n        frame = requestAnimationFrame(animate);\r\n        if (faceRef.current) {\r\n            faceRef.current.addEventListener('click', handleClick);\r\n        }\r\n\r\n        return () => {\r\n            faceRef.current.removeEventListener('click', handleClick);\r\n            if (frame) {\r\n                cancelAnimationFrame(frame);\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        console.log('componentDidUpdate()', faceRef.current);\r\n    });\r\n\r\n    const handleClick = e => {\r\n        e.stopPropagation();\r\n        hitCounter = 50;\r\n    };\r\n\r\n    return (\r\n        <div className=\"stutterer\">\r\n            <svg height=\"310\" width=\"310\">\r\n                <circle\r\n                    className=\"clockFace\"\r\n                    onClick={handleClick}\r\n                    cx={155}\r\n                    cy={155}\r\n                    r={150}\r\n                    ref={faceRef}\r\n                />\r\n                <g ref={arcGroupRef}>{paths}</g>\r\n                <path className=\"clockHand\" ref={clockHandRef} />\r\n            </svg>\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { flushSync } from 'react-dom';\r\nimport Scheduler, {unstable_scheduleCallback} from \"scheduler\";\r\nimport _ from 'lodash';\r\nimport Charts from './Charts';\r\nimport Clock from './Clock';\r\nimport \"./App.css\";\r\n\r\nlet cachedData = new Map();\r\n\r\nexport default function App() {\r\n\r\n    const [state, setState] = useState({\r\n        value: '',\r\n        strategy: 'sync',\r\n        showDemo: true,\r\n        showClock: false,\r\n    });\r\n\r\n    let _ignoreClick;\r\n    // Random data for the chart\r\n    const getStreamData = input => {\r\n\r\n        if (cachedData.has(input)) {\r\n            return cachedData.get(input);\r\n        }\r\n\r\n        const multiplier = input.length !== 0 ? input.length : 1;\r\n        const complexity = (parseInt(window.location.search.substring(1), 10) / 100) * 25 || 25;\r\n\r\n        const data = _.range(5).map(t => _.range(complexity * multiplier).map((j, i) => {\r\n                return {x: j, y: (t + 1) * _.random(0, 255)};\r\n            })\r\n        );\r\n\r\n        cachedData.set(input, data);\r\n        return data;\r\n    }\r\n\r\n    useEffect(() => {\r\n        const KeyDownHandler = e => {\r\n            if (e.key.toLowerCase() === '?') {\r\n                e.preventDefault();\r\n                setState(state => ({\r\n                    showClock: !state.showClock\r\n                }));\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', KeyDownHandler);\r\n        return () => {\r\n            window.removeEventListener('keydown', KeyDownHandler);\r\n        };\r\n    }, []);\r\n\r\n    const handleChartClick = e => {\r\n        if (state.showDemo) {\r\n            if (e.shiftKey) {\r\n                setState({ ...state, showDemo: false });\r\n            }\r\n            return;\r\n        }\r\n        if (state.strategy !== 'async') {\r\n            flushSync(() => {\r\n                setState(state => ({\r\n                    showDemo: !state.showDemo\r\n                }));\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (_ignoreClick) {\r\n            return;\r\n        }\r\n        _ignoreClick = true;\r\n\r\n        Scheduler.unstable_next(() => {\r\n            setState({ showDemo: true });//, () => {this._ignoreClick = false;}\r\n        });\r\n    };\r\n\r\n    const debouncedHandleChange = _.debounce(value => {\r\n\r\n        if (state.strategy === 'debounced') {\r\n            flushSync(() => {\r\n                setState({ ...state, value: value });\r\n            });\r\n        }\r\n    }, 1000);\r\n\r\n    const renderOption = (strategy, label) => {\r\n\r\n        const currentStrategy = state.strategy;\r\n\r\n        return (\r\n            <label className={strategy === currentStrategy ? 'selected' : null}>\r\n                <input\r\n                    type=\"radio\"\r\n                    checked={strategy === currentStrategy}\r\n                    onChange={() => setState({ ...state, strategy })}\r\n                />\r\n                {label}\r\n            </label>\r\n        );\r\n    }\r\n\r\n    const handleChange = e => {\r\n\r\n        const value = e.target.value;\r\n\r\n        switch (state.strategy) {\r\n            case 'sync':\r\n                setState({ ...state, value });\r\n                break;\r\n            case 'debounced':\r\n                debouncedHandleChange(value);\r\n                break;\r\n            case 'async':\r\n                unstable_scheduleCallback(() => {\r\n                    setState({ ...state, value });\r\n                });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n    \r\n    const data = getStreamData(state.value);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"rendering\">\r\n                {renderOption('sync', 'Synchronous')}\r\n                {renderOption('debounced', 'Debounced')}\r\n                {renderOption('async', 'Concurrent')}\r\n            </div>\r\n            <input\r\n                className={'input ' + state.strategy}\r\n                placeholder=\"longer input → more components and DOM nodes\"\r\n                defaultValue={state.input}\r\n                onChange={handleChange}\r\n            />\r\n            <div className=\"demo\" onClick={handleChartClick}>\r\n                {state.showDemo && (\r\n                    <Charts data={data} onClick={handleChartClick} />\r\n                )}\r\n                <div style={{ display: state.showClock ? 'block' : 'none' }}>\r\n                    <Clock />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React, { StrictMode } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from './App';\r\n\r\nconst container = document.getElementById(\"root\");\r\nconst root = ReactDOM.unstable_createRoot(container);\r\nroot.render(<StrictMode><App /></StrictMode>);\r\n"],"sourceRoot":""}